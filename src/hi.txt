<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Savings Tracker</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background: linear-gradient(135deg, #4b6cb7 0%, #182848 100%);
            color: white;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        .subtitle {
            font-size: 1.2rem;
            opacity: 0.9;
        }

        .app-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .form-section {
            flex: 1;
            min-width: 300px;
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .savings-list {
            flex: 2;
            min-width: 300px;
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        h2 {
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #4b6cb7;
            color: #182848;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #182848;
        }

        input,
        select,
        textarea {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
        }

        textarea {
            height: 100px;
            resize: vertical;
        }

        button {
            background: #4b6cb7;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: background 0.3s;
        }

        button:hover {
            background: #3a5999;
        }

        .savings-item {
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            background: #f9fafc;
            transition: transform 0.2s;
        }

        .savings-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .savings-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .savings-date {
            font-weight: 600;
            color: #4b6cb7;
        }

        .savings-category {
            background: #eef2f9;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 14px;
            color: #4b6cb7;
        }

        .savings-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 10px;
        }

        .savings-amount {
            font-weight: 600;
            color: #2c3e50;
        }

        .savings-price {
            font-weight: 600;
            color: #27ae60;
        }

        .savings-description {
            color: #7f8c8d;
            font-style: italic;
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px dashed #ddd;
        }

        .summary {
            margin-top: 30px;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .summary h2 {
            text-align: center;
        }

        .stats {
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 20px;
        }

        .stat-card {
            background: linear-gradient(135deg, #4b6cb7 0%, #182848 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            min-width: 200px;
            flex: 1;
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            margin: 10px 0;
        }

        .actions {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .delete-btn {
            background: #e74c3c;
        }

        .delete-btn:hover {
            background: #c0392b;
        }

        .export-btn {
            background: #27ae60;
        }

        .export-btn:hover {
            background: #219653;
        }

        @media (max-width: 768px) {
            .app-container {
                flex-direction: column;
            }

            .savings-details {
                grid-template-columns: 1fr;
            }

            .stats {
                flex-direction: column;
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <header>
            <h1>Savings Tracker</h1>
            <p class="subtitle">Track your savings with ease</p>
        </header>

        <div class="app-container">
            <section class="form-section">
                <h2>Add New Saving</h2>
                <form id="saving-form">
                    <div class="form-group">
                        <label for="date">Date</label>
                        <input type="date" id="date" required>
                    </div>

                    <div class="form-group">
                        <label for="category">Category</label>
                        <input type="text" id="category" placeholder="Enter a category" required>
                    </div>

                    <div class="form-group">
                        <label for="amount">Amount</label>
                        <input type="number" id="amount" placeholder="Enter amount" step="0.01" required>
                    </div>

                    <div class="form-group">
                        <label for="price">Price (per unit if applicable)</label>
                        <input type="number" id="price" placeholder="Enter price" step="0.01" required>
                    </div>

                    <div class="form-group">
                        <label for="description">Description</label>
                        <textarea id="description" placeholder="Enter description"></textarea>
                    </div>

                    <button type="submit">Add Saving</button>
                </form>
            </section>

            <section class="savings-list">
                <h2>Your Savings</h2>
                <div id="savings-container">
                    <!-- Savings will be displayed here -->
                </div>

                <div class="actions">
                    <button id="clear-all" class="delete-btn">Clear All</button>
                    <button id="export-btn" class="export-btn">Export to File</button>
                </div>
            </section>
        </div>

        <section class="summary">
            <h2>Savings Summary</h2>
            <div class="stats">
                <div class="stat-card">
                    <div>Total Savings</div>
                    <div class="stat-value" id="total-savings">$0.00</div>
                    <div>Across all categories</div>
                </div>

                <div class="stat-card">
                    <div>Number of Items</div>
                    <div class="stat-value" id="total-items">0</div>
                    <div>Tracked so far</div>
                </div>

                <div class="stat-card">
                    <div>Average per Item</div>
                    <div class="stat-value" id="average-amount">$0.00</div>
                    <div>Across all items</div>
                </div>
            </div>
        </section>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize savings array from localStorage or empty array
            let savings = JSON.parse(localStorage.getItem('savings')) || [];

            const savingForm = document.getElementById('saving-form');
            const savingsContainer = document.getElementById('savings-container');
            const clearAllBtn = document.getElementById('clear-all');
            const exportBtn = document.getElementById('export-btn');

            // Display existing savings
            renderSavings();
            updateSummary();

            // Form submission handler
            savingForm.addEventListener('submit', function (e) {
                e.preventDefault();

                const newSaving = {
                    id: Date.now(), // unique ID
                    date: document.getElementById('date').value,
                    category: document.getElementById('category').value,
                    amount: parseFloat(document.getElementById('amount').value),
                    price: parseFloat(document.getElementById('price').value),
                    description: document.getElementById('description').value
                };

                // Add to array and save
                savings.push(newSaving);
                saveSavings();
                renderSavings();
                updateSummary();

                // Reset form
                savingForm.reset();
            });

            // Clear all savings
            clearAllBtn.addEventListener('click', function () {
                if (confirm('Are you sure you want to clear all savings?')) {
                    savings = [];
                    saveSavings();
                    renderSavings();
                    updateSummary();
                }
            });

            // Export to file
            exportBtn.addEventListener('click', function () {
                exportToFile();
            });

            // Function to render savings
            function renderSavings() {
                savingsContainer.innerHTML = '';

                if (savings.length === 0) {
                    savingsContainer.innerHTML = '<p style="text-align: center; padding: 20px; color: #7f8c8d;">No savings records yet. Add your first saving!</p>';
                    return;
                }

                // Sort by date (newest first)
                const sortedSavings = [...savings].sort((a, b) => new Date(b.date) - new Date(a.date));

                sortedSavings.forEach(saving => {
                    const savingEl = document.createElement('div');
                    savingEl.className = 'savings-item';
                    savingEl.innerHTML = `
                        <div class="savings-header">
                            <span class="savings-date">${formatDate(saving.date)}</span>
                            <span class="savings-category">${saving.category}</span>
                        </div>
                        <div class="savings-details">
                            <div>Amount: <span class="savings-amount">${saving.amount}</span></div>
                            <div>Price: $<span class="savings-price">${saving.price.toFixed(2)}</span></div>
                        </div>
                        <div class="savings-description">${saving.description || 'No description'}</div>
                        <button class="delete-btn" data-id="${saving.id}">Delete</button>
                    `;

                    savingsContainer.appendChild(savingEl);
                });

                // Add event listeners to delete buttons
                document.querySelectorAll('.delete-btn').forEach(btn => {
                    if (btn.id !== 'clear-all') {
                        btn.addEventListener('click', function () {
                            const id = parseInt(this.getAttribute('data-id'));
                            deleteSaving(id);
                        });
                    }
                });
            }

            // Function to delete a saving
            function deleteSaving(id) {
                if (confirm('Are you sure you want to delete this saving?')) {
                    savings = savings.filter(saving => saving.id !== id);
                    saveSavings();
                    renderSavings();
                    updateSummary();
                }
            }

            // Function to save to localStorage
            function saveSavings() {
                localStorage.setItem('savings', JSON.stringify(savings));
            }

            // Function to update summary
            function updateSummary() {
                const totalSavings = savings.reduce((sum, saving) => sum + (saving.amount * saving.price), 0);
                const totalItems = savings.length;
                const averageAmount = totalItems > 0 ? totalSavings / totalItems : 0;

                document.getElementById('total-savings').textContent = `$${totalSavings.toFixed(2)}`;
                document.getElementById('total-items').textContent = totalItems;
                document.getElementById('average-amount').textContent = `$${averageAmount.toFixed(2)}`;
            }

            // Function to export to file
            function exportToFile() {
                // Convert savings to CSV format
                let csv = 'Date,Category,Amount,Price,Description\n';
                savings.forEach(saving => {
                    csv += `"${saving.date}","${saving.category}","${saving.amount}","${saving.price}","${saving.description}"\n`;
                });

                // Create download link
                const blob = new Blob([csv], { type: 'text/csv' });
                const url = URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.href = url;
                a.download = 'savings.csv';
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                URL.revokeObjectURL(url);
            }

            // Helper function to format date
            function formatDate(dateString) {
                const options = { year: 'numeric', month: 'short', day: 'numeric' };
                return new Date(dateString).toLocaleDateString(undefined, options);
            }
        });
    </script>
</body>

</html>